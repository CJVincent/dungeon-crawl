import java.io.*;
import java.util.*;
import javax.swing.*;
import java.awt.*;
import java.awt.image.*;
import javax.imageio.*;
import java.awt.event.*;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Christopher
 */
public class DungeonCrawl extends javax.swing.JFrame {
    private static Battle b;
    private boolean attacked;
    private boolean healed;
    private boolean ran;
    private boolean advanced;
    /**
     * Creates new form DungeonCrawl
     */
    public DungeonCrawl(Battle bttl) {
        b = bttl;
        attacked = false;
        healed = false;
        ran = false;
        advanced = false;
        initComponents();
    }

    /**
     * sets up look of GUI, generated by Netbeans
     */
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        attb = new javax.swing.JButton();
        healb = new javax.swing.JButton();
        runb = new javax.swing.JButton();
        contb = new javax.swing.JButton();
        enemyPanel = new javax.swing.JPanel();
        enemyIcon = new javax.swing.JLabel();

        jDialog1.setAlwaysOnTop(true);
        jDialog1.setMinimumSize(new java.awt.Dimension(160, 350));
        jDialog1.setPreferredSize(new java.awt.Dimension(160, 350));

        jLabel1.setText("Strength");

        jLabel2.setText("Agility");

        jLabel3.setText("Wisdom");

        jLabel4.setText("Constitution");

        jLabel5.setText("Luck");

        jLabel6.setText("HP");

        jLabel7.setText("Enemy HP");

        jLabel8.setText("Treasure");

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DungeonCrawlGUI");
        setMaximumSize(new java.awt.Dimension(487, 553));
        setResizable(false);

        attb.setText("Attack");
        attb.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    attbActionPerformed(evt);
                }
            });

        healb.setText("Heal");
        healb.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    healbActionPerformed(evt);
                }
            });

        runb.setText("Run");
        runb.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    runbActionPerformed(evt);
                }
            });

        contb.setText("Continue");
        contb.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    contbActionPerformed(evt);
                }
            });

        enemyPanel.setMaximumSize(new java.awt.Dimension(0, 468));

        enemyIcon.setPreferredSize(new java.awt.Dimension(1, 1));

        javax.swing.GroupLayout enemyPanelLayout = new javax.swing.GroupLayout(enemyPanel);
        enemyPanel.setLayout(enemyPanelLayout);
        enemyPanelLayout.setHorizontalGroup(
            enemyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(enemyIcon, javax.swing.GroupLayout.DEFAULT_SIZE, 391, Short.MAX_VALUE)
        );
        enemyPanelLayout.setVerticalGroup(
            enemyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(enemyIcon, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(enemyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(attb)
                        .addGap(103, 103, 103)
                        .addComponent(healb)
                        .addGap(79, 79, 79)
                        .addComponent(runb))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(204, 204, 204)
                        .addComponent(contb)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(enemyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(contb)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(runb)
                    .addComponent(attb)
                    .addComponent(healb))
                .addGap(16, 16, 16))
        );

        pack();
    }                       

    /**
     * When clicked, player chooses to attack enemy.
     */
    private void attbActionPerformed(java.awt.event.ActionEvent evt) {
        attb.setEnabled(false);
        healb.setEnabled(false);
        runb.setEnabled(false);
        showImage(new ImageIcon("Hit.jpg"));
        b.getPlayer().attack(b.getEnemy());
        attacked = true;
    }

    /**
     * Tells Battle that player has attacked
     */
    public boolean playerAttacked()
    {
        return attacked;
    }

    /**
     * Allows Battle to reset the attacked variable.
     */
    public void setAttacked(boolean boo)
    {
        attacked = boo;
    }

    /**
     * When clicked, player chooses to heal.
     */
    private void healbActionPerformed(java.awt.event.ActionEvent evt) {
        attb.setEnabled(false);
        healb.setEnabled(false);
        runb.setEnabled(false);
        showImage(new ImageIcon("Heal.jpg"));
        b.getPlayer().heal();
        healed = true;
    }                                     

    /**
     * Tells Battle that player has healed
     */
    public boolean playerHealed()
    {
        return healed;
    }

    /**
     * Allows Battle to reset the healed variable.
     */
    public void setHealed(boolean boo)
    {
        healed = boo;
    }

    /**
     * When clicked, player chooses to run from enemy.
     */
    private void runbActionPerformed(java.awt.event.ActionEvent evt) {
        attb.setEnabled(false);
        healb.setEnabled(false);
        runb.setEnabled(false);
        showImage(new ImageIcon("Escape_Attempt.jpg"));
        b.getPlayer().escape();
        ran = true;
    }                                    

    /**
     * Tells Battle that player has tried to escape
     */
    public boolean playerRan()
    {
        return ran;
    }

    /**
     * Allows Battle to reset the ran variable.
     */
    public void setRan(boolean boo)
    {
        ran = boo;
    }

    /**
     * Used by DungeonCrawler to change Battles without redrawing GUI
     */
    public void setBattle(Battle bttl)
    {
        b = bttl;
    }

    /**
     * Hides attack, heal, and run buttons, shows continue button, removes enemy's image
     */
    public void endCombat()
    {
        attb.setVisible(false);
        healb.setVisible(false);
        runb.setVisible(false);
        contb.setVisible(true);
        advanced = false;
        
    }

    /**
     * Shows attack, heal, and run buttons, hides continue button, shows enemy's image
     */
    public void startCombat(ImageIcon icon)
    {
        showImage(icon);
        advanced = false;
        jDialog1.setVisible(true);
        contb.setVisible(false);
        attb.setVisible(true);
        healb.setVisible(true);
        runb.setVisible(true);
    }

    /**
     * Show's desired image, such as enemy picture or other events
     */
    public void showImage(ImageIcon icon)
    {
        Image iconImage = icon.getImage().getScaledInstance(enemyPanel.getWidth(), enemyPanel.getHeight(), Image.SCALE_SMOOTH);
        icon.setImage(iconImage);
        enemyIcon.setIcon(icon);
    }

    /**
     * When clicked, game advances to next Battle
     */
    private void contbActionPerformed(java.awt.event.ActionEvent evt) {                                      
        advanced = true;
    } 

    /**
     * Tells Battle that player hit continue
     */
    public boolean playerAdvanced()
    {
        return advanced;
    }

    /**
     * Updates the info in the stats box
     */
    public void updateStats(ImageIcon icon)
    {
        jLabel1.setText("Strength- " + b.getPlayer().getStrength());
        jLabel2.setText("Agility- "+ b.getPlayer().getAgility());
        jLabel3.setText("Wisdom- "+ b.getPlayer().getWisdom());
        jLabel4.setText("Constitution- "+ b.getPlayer().getConstitution());
        jLabel5.setText("Luck- "+ b.getPlayer().getLuck());
        jLabel6.setText("HP- " + b.getPlayer().getHP() + "/" + b.getPlayer().getConstitution() * 6);
        jLabel7.setText("Enemy HP- "+ b.getEnemy().getHP());
        jLabel8.setText("Treasure- "+ b.getPlayer().getTreasure());
        showImage(icon);
        attb.setEnabled(true);
        healb.setEnabled(true);
        runb.setEnabled(true);
    }

    /**
     * @param args the command line arguments
     * generated by Netbeans
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel 
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DungeonCrawl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DungeonCrawl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DungeonCrawl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DungeonCrawl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new DungeonCrawl(b).setVisible(true);
                }
            });
    }
    public void cleanUp()
    {
        jDialog1.setVisible(false);
        jDialog1.dispose();
        dispose();
        
    }
    // Variables declaration - do not modify   Generated by Netbeans                   
    private javax.swing.JPanel enemyPanel; // the panel for enemyIcon
    private javax.swing.JButton attb;
    private javax.swing.JButton contb;
    private javax.swing.JButton healb;
    private javax.swing.JDialog jDialog1; // the stats box
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel enemyIcon; // The icon for displaying images
    private javax.swing.JButton runb;
    // End of variables declaration                       
}

